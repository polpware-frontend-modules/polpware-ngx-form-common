{"version":3,"file":"polpware-ngx-form-common.js","sources":["ng://@polpware/ngx-form-common/lib/interfaces/has-alert-info.interface.ts","ng://@polpware/ngx-form-common/lib/interfaces/has-submission-state.interface.ts","ng://@polpware/ngx-form-common/lib/bases/default-form-base-component.ts","ng://@polpware/ngx-form-common/public-api.ts","ng://@polpware/ngx-form-common/polpware-ngx-form-common.ts"],"sourcesContent":["/**\n * Models different kinds of messages.\n *\n * Note that we on purpose use lowercase letters to \n * be consistent with the bootstrap alert types (Particularly \n * from ngx-bootstrap library). By doing so, we may directly \n * transform this alert type into the bootstrap one.\n */\nexport enum AlertTypeEnum {\n    none = 0,\n    info = 1,\n    warning = 2,\n    success = 3,\n    danger = 4,\n    other = 5\n}\n\nexport interface IHasAlertInfo {\n    alertMessage: string;\n    alertSubMessage: string;\n    alertType: AlertTypeEnum;\n    alertDismissible: boolean;\n}    \n","/**\n * Models the submission state of a request.\n */\nexport enum SubmissionStateEnum {\n    None = 0,\n    Processing = 1,\n    Success = 2,\n    Failure = 3,\n    Other = 4\n}\n\nexport interface IHasSubmissionState {\n    submissionState: SubmissionStateEnum;\n}    \n","import { Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IHasNotifications } from '../interfaces/has-notifications.interface';\r\n\r\n\r\n/**\r\n * Models the inputs for the default reusable form.\r\n */\r\nexport interface IDefaultFormInputs {\r\n    hideCancelBtn?: boolean;\r\n    hideSubmitBtn?: boolean;\r\n    submitBtnTxt?: string;\r\n    cancelBtnTxt?: string;\r\n}\r\n\r\n/**\r\n * Provides a base for defining a reusable form. \r\n */\r\nexport abstract class DefaultFormBaseComponent implements IHasNotifications {\r\n\r\n    isSaving: boolean;\r\n\r\n    abstract readonly form: FormGroup;\r\n\r\n    @Input()\r\n    hideCancelBtn: boolean = false;\r\n    @Input()\r\n    hideSubmitBtn: boolean = false;\r\n    @Input()\r\n    submitBtnTxt: string = 'Submit';\r\n    @Input()\r\n    cancelBtnTxt: string = 'Cancel';\r\n\r\n    @Output()\r\n    readonly onSave = new EventEmitter();\r\n    @Output()\r\n    readonly onCancel = new EventEmitter();\r\n    @Output()\r\n    readonly onValueChanged = new EventEmitter();\r\n    @Output()\r\n    readonly onValidation = new EventEmitter();\r\n\r\n    public notifyValidation() {\r\n        this.onValidation.emit({\r\n            valid: this.form.valid\r\n        });\r\n    }\r\n\r\n    public notifyValueChanges(a: any) {\r\n        this.onValueChanged.emit(a);\r\n    }\r\n}\r\n","/*\n * Public API Surface of ngx-form-common\n */\n\nexport * from './lib/interfaces/has-alert-info.interface';\nexport * from './lib/interfaces/has-submission-state.interface';\nexport * from './lib/interfaces/has-notifications.interface';\nexport * from './lib/bases/default-form-base-component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;AAAA;;;;;;;;IAQY;AAAZ,WAAY,aAAa;IACrB,iDAAQ,CAAA;IACR,iDAAQ,CAAA;IACR,uDAAW,CAAA;IACX,uDAAW,CAAA;IACX,qDAAU,CAAA;IACV,mDAAS,CAAA;AACb,CAAC,EAPW,aAAa,KAAb,aAAa;;ACRzB;;;IAGY;AAAZ,WAAY,mBAAmB;IAC3B,6DAAQ,CAAA;IACR,yEAAc,CAAA;IACd,mEAAW,CAAA;IACX,mEAAW,CAAA;IACX,+DAAS,CAAA;AACb,CAAC,EANW,mBAAmB,KAAnB,mBAAmB;;ACY/B;;;;IAGA;QAOI,kBAAa,GAAY,KAAK,CAAC;QAE/B,kBAAa,GAAY,KAAK,CAAC;QAE/B,iBAAY,GAAW,QAAQ,CAAC;QAEhC,iBAAY,GAAW,QAAQ,CAAC;QAGvB,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAE5B,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAE9B,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;QAEpC,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAW9C;IATU,mDAAgB,GAAvB;QACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;SACzB,CAAC,CAAC;KACN;IAEM,qDAAkB,GAAzB,UAA0B,CAAM;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC/B;oGAhCiB,wBAAwB;8DAAxB,wBAAwB;mCAlB9C;CAkBA;;AClBA;;;;ACAA;;;;;;"}