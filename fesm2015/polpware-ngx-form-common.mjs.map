{"version":3,"file":"polpware-ngx-form-common.mjs","sources":["../../../../projects/polpware/ngx-form-common/src/lib/interfaces/has-alert-info.interface.ts","../../../../projects/polpware/ngx-form-common/src/lib/interfaces/has-submission-state.interface.ts","../../../../projects/polpware/ngx-form-common/src/lib/bases/default-form-base-component.ts","../../../../projects/polpware/ngx-form-common/src/public-api.ts","../../../../projects/polpware/ngx-form-common/src/polpware-ngx-form-common.ts"],"sourcesContent":["/**\n * Models different kinds of messages.\n *\n * Note that we on purpose use lowercase letters to \n * be consistent with the bootstrap alert types (Particularly \n * from ngx-bootstrap library). By doing so, we may directly \n * transform this alert type into the bootstrap one.\n */\nexport enum AlertTypeEnum {\n    none = 0,\n    info = 1,\n    warning = 2,\n    success = 3,\n    danger = 4,\n    other = 5\n}\n\nexport interface IHasAlertInfo {\n    alertMessage: string;\n    alertSubMessage: string;\n    alertType: AlertTypeEnum;\n    alertDismissible: boolean;\n}    \n","/**\n * Models the submission state of a request.\n */\nexport enum SubmissionStateEnum {\n    None = 0,\n    Processing = 1,\n    Success = 2,\n    Failure = 3,\n    Other = 4\n}\n\nexport interface IHasSubmissionState {\n    submissionState: SubmissionStateEnum;\n}    \n","import { Input, Output, EventEmitter, Directive } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IHasNotifications } from '../interfaces/has-notifications.interface';\r\n\r\n\r\n/**\r\n * Models the inputs for the default reusable form.\r\n */\r\nexport interface IDefaultFormInputs {\r\n    hideCancelBtn?: boolean;\r\n    hideSubmitBtn?: boolean;\r\n    submitBtnTxt?: string;\r\n    cancelBtnTxt?: string;\r\n}\r\n\r\n/**\r\n * Provides a base for defining a reusable form. \r\n */\r\n@Directive()\nexport abstract class DefaultFormBaseComponent implements IHasNotifications {\r\n\r\n    isSaving: boolean;\r\n\r\n    abstract readonly form: FormGroup;\r\n\r\n    @Input()\r\n    hideCancelBtn: boolean = false;\r\n    @Input()\r\n    hideSubmitBtn: boolean = false;\r\n    @Input()\r\n    submitBtnTxt: string = 'Submit';\r\n    @Input()\r\n    cancelBtnTxt: string = 'Cancel';\r\n\r\n    @Output()\r\n    readonly onSave = new EventEmitter();\r\n    @Output()\r\n    readonly onCancel = new EventEmitter();\r\n    @Output()\r\n    readonly onValueChanged = new EventEmitter();\r\n    @Output()\r\n    readonly onValidation = new EventEmitter();\r\n\r\n    public notifyValidation() {\r\n        this.onValidation.emit({\r\n            valid: this.form.valid\r\n        });\r\n    }\r\n\r\n    public notifyValueChanges(a: any) {\r\n        this.onValueChanged.emit(a);\r\n    }\r\n}\r\n","/*\n * Public API Surface of ngx-form-common\n */\n\nexport * from './lib/interfaces/has-alert-info.interface';\nexport * from './lib/interfaces/has-submission-state.interface';\nexport * from './lib/interfaces/has-notifications.interface';\nexport * from './lib/bases/default-form-base-component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}